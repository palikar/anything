#+OPTIONS: toc:nil todo:t |:t

#+title: README
#+date: <2020-05-29 Fri>
#+author: Stanislav Arnaudov
#+email: stanislav.arn@gmail.com
#+language: en
#+select_tags: export
#+exclude_tags: noexport
#+creator: Emacs 26.3 (Org mode 9.3.2)



* Anything

[[./logo.png]]

** Abstract

"Anything" is my 3d game engine written from scratch in C++. I've been interested in game engines for a long time but only recently I got around to developing something serious. "Anything" is my first big attempt to tackle the topics of 3d rendering, game engine architecture, different rendering techniques and everything that comes with that.


"Anything" is written with modern C++17 in mind and can compile with gcc (8,9) as well as with clang. the Architecture is loosley based on Yan Chernikov's ([[https://www.youtube.com/user/TheChernoProject][TheCherno]]) [[https://github.com/TheCherno/Hazel/][Hazel]] engine. I have to admit I've taken a lot of inspiration from there and I've also learned a ton from Cherno's YouTube channel. The majority the thought behind the "Anything" is, however, mine. 

I the past I've also worked with [[https://threejs.org/][ThreeJS]]. For this reason the API of "Anything" can resemble the one of ThreeJS at times. 

The rendering API of choice for the project is [[https://www.opengl.org/][OpenGL]]. At some point maybe I'll also implement a [[https://en.wikipedia.org/wiki/Direct3D][Direct3D]] backend but is a plan for the far future.

** Building

*** Prerequisites
SCHEDULED: <2020-05-29 Fri>

"Anything" uses several external libraries that have to be installed on the system before the project can be build. Those are:

- OpenGL - for communication with graphics hardware
- [[https://www.glfw.org/][GLFW]] - for creating the opengl context and creating all the necessary windows(frames) as well as the portable communicator between platforms services for input events and the application
- [[http://glew.sourceforge.net/][GLEW]] - for linking the correct OpenGL functions at run time.
- [[https://github.com/assimp/assimp][Assimp]] - for including various 3d scene formats.

Foe Debian based systems, you can install all of those with:
#+BEGIN_SRC sh
sudo apt-get install libglfw3-dev libglew-dev libgl1-mesa-dev libassimp-dev
#+END_SRC

\\

Other than that, you'll also need standard build tools like Make, CMake and C++17 compliant compiler (Gcc, CLang)

*** Building

The build process is straight forward for a CMake project
#+BEGIN_SRC sh
git clone https://github.com/palikar/anything
cd anything
mkdir build
cd build
ccmake ..
make -j4 install
#+END_SRC

** Examples

"Anything" also comes with several example scenes that can be build with:
#+BEGIN_SRC sh
cmake .. -DBUILD_ALL_EXAMPLES=TRUE
make -j4 install
#+END_SRC

The source files for the examples are in the ~examples/~ directory. Each source file constructs a single scene by using the "Anything" engine.


** Features so far

I've put about a month worth of work so far and I've implemented a lot of the features that I want to implement. A non-exhaustive lists of those is given here.

- Input System (Input from mouse and keyboard)
- Event dispatching system
- [[https://github.com/ocornut/imgui][Dear ImGui]] support
- Entity Component System
- Basic Animation system
- Basic Particle systems
- Sky-box rendering
- Rendered visual helpers (axis, plane, grid, camera, spot light, point light)
- Fog rendering
- Lighting (directional, ambient, spot and point-light )
- Mouse picking
- Instance rendering
- Loading OBJ and .blend files
- Materials - Phong material, Textured material(unaffected by lighting), Single Color material
- Rendering primitives - lines and triangles
- Geometry factories - sphere, cube, cylinder, circle, cone, plane, ring and torus

** Documentation

Coming eventually :)

** License
Copyright Â© 2020 Stanislav Arnaudov.

Distributed under the GNU General Public License, version 2
